{"version":3,"sources":["App.js","components/Display.js","components/Keypad.js","index.js"],"names":["fixInput","inputStr","currentOp","toTest","test","slice","init","input","output","showInput","decimal","App","state","handleCeClick","setState","handleNumClick","e","value","target","textContent","id","preventDefault","opnum","handleDecClick","handleOperClick","fixedInput","handleEqualsClick","re","result","eval","replace","toFixed","toString","length","handlers","this","handleInput","className","Component","Display","props","Keypad","onClick","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.22244cf4.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport Display from \"./components/Display\";\nimport Keypad from \"./components/Keypad\";\nimport \"./styles.css\";\n\nfunction fixInput(inputStr, currentOp) {\n  const lastTwoOp = /([+\\-*/]{2})$/;\n  const lastThreeOp = /([+\\-*/]{3})$/; //\n  const allowTwo = /(\\*|\\/)-/; //don't replace *- and /-\n  const toTest = inputStr + currentOp;\n  if (lastTwoOp.test(toTest) && !allowTwo.test(toTest)) {\n    // if there are 2 operators and those are not the allowed combinations, replace  them with the last operator\n    inputStr = inputStr.slice(0, -1) + currentOp;\n  } else if (lastThreeOp.test(toTest)) {\n    // if there are 3 operators, replace  them with the last operator\n    inputStr = inputStr.slice(0, -2) + currentOp;\n  } else {\n    inputStr += currentOp;\n  }\n  return inputStr;\n}\n\nconst init = () => ({\n  input: \"\",\n  output: 0,\n  showInput: false,\n  decimal: false\n});\n\nexport default class App extends Component {\n  state = init();\n\n  // HANDLERS\n  handleCeClick = () => {\n    this.setState(init);\n  };\n\n  handleNumClick = (e) => {\n    const { input } = this.state;\n    const value = e.target.textContent;\n    if (e.target.id === \"zero\" && +input === 0) {\n      //if there's 0 in input and 0 is clicked, do nothing\n      e.preventDefault();\n    } else {\n      //add number to input,showinput, reset operators number\n      this.setState((state) => ({\n        input: input + value,\n        showInput: true,\n        opnum: 0\n      }));\n    }\n  };\n\n  handleDecClick = (e) => {\n    const value = e.target.textContent;\n    const { input, decimal } = this.state;\n    if (decimal === true) {\n      //if there's decimal in the input, do nothing\n      e.preventDefault();\n    } else {\n      //add decimal to the input\n      if (!input) {\n        this.setState({\n          input: \"0.\"\n        });\n      } else {\n        this.setState({\n          input: input + value\n        });\n      }\n      //default behavior: set decimal to true and show the input\n      this.setState({\n        decimal: true,\n        showInput: true\n      });\n    }\n  };\n\n  handleOperClick = (e) => {\n    const value = e.target.textContent;\n    const fixedInput = fixInput(this.state.input, value);\n\n    this.setState({\n      input: fixedInput,\n      decimal: false,\n      showInput: true\n    });\n  };\n\n  handleEqualsClick = () => {\n    const { input } = this.state;\n    const re  = /[+\\-/*]+$/;    \n    let result = +eval(input.replace(re, '')).toFixed(7).toString();\n\n    if (result.length > 11) {\n      result = result.slice(0, 11);\n    }\n    this.setState((state) => ({\n      showInput: false,\n      output: result,\n      input: result //test14\n    }));\n  };\n\n  render() {\n    const handlers = {\n      handleCeClick: this.handleCeClick,\n      handleNumClick: this.handleNumClick,\n      handleOperClick: this.handleOperClick,\n      handleEqualsClick: this.handleEqualsClick,\n      handleDecClick: this.handleDecClick,\n      handleInput: this.handleInput\n    };\n    const { input, output, showInput } = this.state;\n    return (\n      <div className = \"calc\">\n        <Display output={output} input={input} showInput={showInput} />\n        <Keypad {...handlers} />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\r\n\r\nconst Display = (props) => {\r\n  //on equals  click  show  the  output ,  if  input continues  , show input, change showoutput\r\n  let { input, output, showInput } = props;\r\n\r\n  return (\r\n    <div id=\"display\" className=\"display_font\">\r\n      {showInput ? input : output}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Display;\r\n","import React from \"react\";\r\n\r\nconst Keypad = (props) => {\r\n  return (\r\n    <div id=\"keypad\">\r\n      <button id=\"clear\" onClick={props.handleCeClick}>\r\n        CE\r\n      </button>\r\n      <button id=\"seven\" onClick={props.handleNumClick}>\r\n        7\r\n      </button>\r\n      <button id=\"eight\" onClick={props.handleNumClick}>\r\n        8\r\n      </button>\r\n      <button id=\"nine\" onClick={props.handleNumClick}>\r\n        9\r\n      </button>\r\n      <button id=\"add\" onClick={props.handleOperClick}>\r\n        +\r\n      </button>\r\n      <button id=\"four\" onClick={props.handleNumClick}>\r\n        4\r\n      </button>\r\n      <button id=\"five\" onClick={props.handleNumClick}>\r\n        5\r\n      </button>\r\n      <button id=\"six\" onClick={props.handleNumClick}>\r\n        6\r\n      </button>\r\n      <button id=\"subtract\" onClick={props.handleOperClick}>\r\n        -\r\n      </button>\r\n      <button id=\"one\" onClick={props.handleNumClick}>\r\n        1\r\n      </button>\r\n      <button id=\"two\" onClick={props.handleNumClick}>\r\n        2\r\n      </button>\r\n      <button id=\"three\" onClick={props.handleNumClick}>\r\n        3\r\n      </button>\r\n      <button id=\"multiply\" onClick={props.handleOperClick}>\r\n        *\r\n      </button>\r\n      <button id=\"zero\" onClick={props.handleNumClick}>\r\n        0\r\n      </button>\r\n      <button id=\"decimal\" onClick={props.handleDecClick}>\r\n        .\r\n      </button>\r\n      <button id=\"equals\" onClick={props.handleEqualsClick}>\r\n        =\r\n      </button>\r\n      <button id=\"divide\" onClick={props.handleOperClick}>\r\n        /\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Keypad;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}